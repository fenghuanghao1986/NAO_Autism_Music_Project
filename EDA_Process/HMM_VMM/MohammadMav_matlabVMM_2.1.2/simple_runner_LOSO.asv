% A simple hands-on tutorial 
% Browse the code to get the basics of how-to utilize this VMM tool

clear

seqASD = createASDAll_data();
seqTD = createTD_data();
seqASDF = createASDF_data();
createParams;


% use AB with size = 5
disp('---------------------------------------------------');
disp('working with AB={A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P }');
disp('---------------------------------------------------');
disp(' ');
s = 1;
% 3. run each of the VMM algorithms
    disp(sprintf('Working with %s', 'LZms' ));
    disp('--------')
    jVmmASD_full = vmm_createNew(map(ab, seqASD),  ALGS{s}, paramsASD);
    jVmmTD_full = vmm_createNew(map(ab, seqTD),  ALGS{s}, paramsTD);

    % test TD sequences versus two models: model_1: TD_LOSO; model_2:
    % ASD_full
 for i = 1:length(seqTD)
    jVmmTD_LOSO = vmm_createLOSO(map(ab, seqTD),  ALGS{s}, i,  paramsTD);
    logLikTD(i,1) = vmm_logEval(jVmmTD_LOSO,mapS(ab, seqTD{i}.se));
    logLikTD(i,2) = vmm_logEval(jVmmASD_full,mapS(ab, seqTD{i}.se));
    disp([ logLikTD(i,1), logLikTD(i,2), logLikTD(i,1) - logLikTD(i,2)]);
    clear jVmmTD_LOSO
    
 end
 disp(sprintf('TD = %f', sum(logLikTD(:,1) > logLikTD(:,2))/length(seqTD)*100))
          
 
  for i = 1:length(seqASD)
    jVmmASD_LOSO = vmm_createLOSO(map(ab, seqASD),  ALGS{s}, i,  paramsASD);
    logLikASD(i,1) = vmm_logEval(jVmmASD_LOSO,mapS(ab, seqASD{i}.se));
    logLikASD(i,2) = vmm_logEval(jVmmTD_full,mapS(ab, seqASD{i}.se));
    disp([ logLikASD(i,1), logLikASD(i,2), logLikASD(i,1) - logLikASD(i,2)]);
        clear jVmmASD_LOSO
  end
  disp(sprintf('ASD= %f' , sum(logLikASD(:,1) > logLikASD(:,2))/length(seqASD)*100))
  
%  for i = 1:length(seqASDF)
%    jVmmASD_LOSO = vmm_createLOSO(map(ab, seqASD),  ALGS{s}, i,  paramsASD);
%    logLikASDF(i,1) = vmm_logEval(jVmmTD_full,mapS(ab, seqASDF{i}.se));
%    logLikASDF(i,2) = vmm_logEval(jVmmASD_full,mapS(ab, seqASDF{i}.se));
%    clear jVmmASD_LOSO
%  end
%    disp(sprintf('ASDF= %f' , sum(logLikASDF(:,1) > logLikASDF(:,2))/length(seqASDF)*100))

 